<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
名称空间，一般需要保持全局唯一，最好和dao层Java接口一致，可以映射sql语句到对应的方法名称和参数，返回类型
mybatis使用接口动态代理
-->
<mapper namespace="net.xdclass.online_class.dao.VideoMapper">
    <!--
    statement sql
    id： 当前mapper下需要唯一
    resultType： sql查询结果集的封装
    -->
    <sql id="base_video_field">
        id,title,summary,cover_img
    </sql>

    <resultMap id="videoResultMap" type="Video">
<!--        id:指定查询列的唯一标识-->
        <id column="id" property="id" jdbcType="INTEGER"/>
<!--        column:数据库字段的名称-->
<!--        property:pojo的名称-->
        <result column="video_title" property="title" jdbcType="VARCHAR"></result>
        <result column="summary" property="summary" jdbcType="VARCHAR"></result>
        <result column="cover_img" property="coverImg" jdbcType="VARCHAR"></result>
    </resultMap>

    <select id="selectBaseFieldByIdWithResultMap" resultMap="videoResultMap">
        select id,title as video_title,summary,cover_img from video where id = #{video_id}
    </select>

    <select id="selectById" parameterType="java.lang.Integer" resultType="Video">
        select
        <include refid="base_video_field"/>
        from video where id = #{videoId,jdbcType=INTEGER}
    </select>
    <select id="selectByPointAndTitleLike" resultType="net.xdclass.online_class.domain.Video">
        select * from video where point=#{point,jdbcType=DOUBLE} and title like concat('%',#{title,jdbcType=VARCHAR},'%');
    </select>

    <select id="selectVideoCount" resultType="java.lang.Integer">
        select count(1) from video;
    </select>

    <!--    插入-->
    <insert id="add" parameterType="Video" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into `video` ( `title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        values
      (#{title,jdbcType=VARCHAR},#{summary,jdbcType=VARCHAR},#{coverImg,jdbcType=VARCHAR},#{price,jdbcType=INTEGER},
       #{createTime,jdbcType=TIMESTAMP},#{point,jdbcType=DOUBLE});
    </insert>
    <!--批量插入-->
    <insert id="addBatch" parameterType="net.xdclass.online_class.domain.Video" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        insert into `video` ( `title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        values
        <foreach collection="list" item="video" index="index" separator=",">
            (#{video.title,jdbcType=VARCHAR},#{video.summary,jdbcType=VARCHAR},#{video.coverImg,jdbcType=VARCHAR},#{video.price,jdbcType=INTEGER},
            #{video.createTime,jdbcType=TIMESTAMP},#{video.point,jdbcType=DOUBLE})
        </foreach>
    </insert>

    <!--    更新-->
    <update id="updateVideo" parameterType="net.xdclass.online_class.domain.Video">
        update video
        set
        title = #{title,jdbcType=VARCHAR},
        summary = #{summary,jdbcType=VARCHAR}
        WHERE
        id=#{id,jdbcType=INTEGER}
    </update>

    <!--    选择性更新-->
    <update id="updateVideoSelective" parameterType="net.xdclass.online_class.domain.Video">
        update video
        <trim suffixOverrides=",">
            set
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="summary !=null">
                summary = #{summary,jdbcType=VARCHAR},
            </if>
            <if test="price != 0">
                price = #{price,jdbcType=DOUBLE},
            </if>
        </trim>
        WHERE
        id=#{id,jdbcType=INTEGER}
    </update>
    <!--    删除-->
    <delete id="deleteByCreateTimeAndPrice" parameterType="java.util.Map">
        delete from video where create_time <![CDATA[>]]> #{createTime} and price <![CDATA[<=]]> #{price};
    </delete>


</mapper>